<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration PUBLIC
  "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
  <settings>
    <setting name="cacheEnabled" value="true"/>
    <!-- 全局性地启用或禁用运行时字节码增强，以优化enhancementEnabled访问Java Bean属性的性能，同时优化延迟加载的性能 -->
    <!-- 2.x版本有 <setting name="enhancementEnabled" value="true"/> -->
    <!-- 全局启用或禁用延迟加载。当禁用时，所有关联对象都会即时加载 -->
    <setting name="lazyLoadingEnabled" value="true"/>
    <!-- 当启用时，有延迟加载属性的对象在被调用时将会完全加载任意属性。否则，每种属性将会按需要加载 -->
    <setting name="aggressiveLazyLoading" value="true"/>
    <!-- 允许或不允许多种结果集从一个单独的语句中返回（需要适合的驱动） -->
    <!-- setting name="multipleResultSetsEnabled" value="true"/ -->
    <setting name="useColumnLabel" value="true"/>
    <setting name="useGeneratedKeys" value="false"/>
    <!-- 配置默认的执行器。SIMPLE执行器没有什么特别之处。REUSE执行器重用预处理语句。BATCH执行器重用语句和批量更新 -->
    <setting name="defaultExecutorType" value="REUSE"/>
    <!-- 指定MyBatis如何自动映射列到字段/属性。PARTIAL只会自动映射简单，没有嵌套的结果。FULL会自动映射任意复杂的结果（嵌套的或其他情况）。 -->
    <setting name="autoMappingBehavior" value="FULL"/>
    <setting name="defaultStatementTimeout" value="25000"/>
    <setting name="callSettersOnNulls" value="true"/>
    <!-- maxRequests=maxTransactions*10 -->
    <!--<setting name="logImpl" value="SLF4J"/>-->
    <!-- 这条覆盖了上边的设置,需要去除,但是目前为了调试sql,暂时保留-->
    <setting name="logImpl" value="STDOUT_LOGGING"/>
  </settings>

  <!-- <cache type="org.mybatis.caches.ehcache.EhcacheCache" /> -->

  <typeAliases>
  </typeAliases>

  <typeHandlers>
    <typeHandler javaType="String" jdbcType="CLOB"
      handler="org.apache.ibatis.type.ClobTypeHandler"/>
    <typeHandler javaType="String" jdbcType="NCLOB"
      handler="org.apache.ibatis.type.NClobTypeHandler"/>
    <typeHandler javaType="byte[]" jdbcType="BLOB"
      handler="org.apache.ibatis.type.BlobTypeHandler"/>
    <!-- <typeHandler javaType="java.util.Date" jdbcType="TIMESTAMP" handler="net.zhust.config.TimestampTypeHandler" /> -->
  </typeHandlers>

  <plugins>
    <plugin interceptor="com.github.dreamroute.locker.interceptor.OptimisticLocker">
      <property name="versionColumn" value="version"/>
    </plugin>
    <plugin interceptor="com.github.pagehelper.PageInterceptor">
      <!--<property name="dialect" value="mysql"/>-->
      <property name="offsetAsPageNum" value="false"/>
      <property name="rowBoundsWithCount" value="true"/>
      <property name="pageSizeZero" value="true"/>
      <property name="reasonable" value="false"/>
<!--      <property name="supportMethodsArguments" value="false"/>-->
      <property name="returnPageInfo" value="none"/>
<!--      分页参数-->
      <property name="supportMethodsArguments" value="true"/>
      <property name="params" value="pageNum=pageNumKey;pageSize=pageSizeKey;"/>
    </plugin>
  </plugins>

  <mappers>
  </mappers>
</configuration>	